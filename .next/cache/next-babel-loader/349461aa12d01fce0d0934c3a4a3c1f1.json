{"ast":null,"code":"var _jsxFileName = \"/Users/sue/podcasts/pages/channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import React, { Component } from 'react';\n// export default class extends Component {\n//   static async getInitialProps({ query }) {\n//   let idChannel = query.id;\n//   let [reqChannel,reqAudio,reqSeries] = await Promise.all([\n//     fetch(`https://api.audioboom.com/channels/${idChannel}`),\n//     fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n//     fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n//   ])\n//   let dataChannel = await reqChannel.json()\n//     let channel = dataChannel.body.channel;\n//   let dataAudios = await reqAudio.json();\n//   let audioClips = dataAudios.body.audio_clips\n//   let dataSeries = await reqSeries.json();\n//   let series = dataSeries.body.channels\n//   return { channel, audioClips, series }\n//   }\n//   render() {\n//     const { channel, audioClips, series } = this.props;\n//     return <div>\n//       <header>Podcast </header>\n//       <h1>\n//        {channel.title}\n//       </h1>\n//       {\n//         audioClips.map((clip => (\n//           <div>\n//             {clip.title}\n//           </div>\n//         ))) \n//       }\n//       <h2>last podcast</h2>\n//       {\n//           series.map(serie => (\n//             <div>\n//               {serie.title}\n//             </div>\n//           )) \n//       }\n//       <style jsx> {`\n//         header {\n//           color: white;\n//           background: #8756ca;\n//           padding: 15px;\n//           text-align: center;\n//         }\n//         h1 {\n//           padding: 15px,\n//         }\n//         .channels {\n//           display: grid;\n//           grid-gap: 15px;\n//           padding: 15px;\n//           grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n//         }\n//         a.channel {\n//           display: block;\n//           margin-bottom: 0.5em;\n//           color: #333;\n//           text-decoration: none;\n//         }\n//         .channel img {\n//           border-radius: 3px;\n//           box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n//           width: 100%;\n//         }\n//         h2 {\n//           padding: 5px;\n//           font-size: 0.9em;\n//           font-weight: 600;\n//           margin: 0;\n//           text-align: center;\n//           color: #8756ca;\n//         }\n//       `}\n//       </style>\n//       <style jsx global> {`\n//         body {\n//           margin: 0;\n//           background: lightcyan;\n//           font-family: system-ui;\n//         }\n//       `}\n//       </style>\n//     </div>\n//   }\n// };\nimport Link from 'next/link';\nexport default class extends React.Component {\n  static async getInitialProps({\n    query\n  }) {\n    let idChannel = query.id;\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      channel,\n      audioClips,\n      series\n    };\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }\n    }, __jsx(\"header\", {\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, \"Podcasts\"), __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-1396407732\" + \" \" + \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }), __jsx(\"h1\", {\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Series\"), __jsx(\"div\", {\n      className: \"jsx-1396407732\" + \" \" + \"channels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, series.map(serie => __jsx(Link, {\n      href: `/channel?id=${serie.id}`,\n      prefetch: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-1396407732\" + \" \" + \"channel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: serie.urls.logo_image.original,\n      alt: \"\",\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }), __jsx(\"h2\", {\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, serie.title)))))), __jsx(\"h2\", {\n      className: \"jsx-1396407732\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, \"Ultimos Podcasts\"), audioClips.map(clip => __jsx(\"div\", {\n      key: clip.id,\n      className: \"jsx-1396407732\" + \" \" + \"podcast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, clip.title)), __jsx(_JSXStyle, {\n      id: \"2708430005\",\n      __self: this\n    }, \"header.jsx-1396407732{color:#fff;background:#8756ca;padding:15px;text-align:center;}.banner.jsx-1396407732{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}.channels.jsx-1396407732{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}a.channel.jsx-1396407732{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-1396407732 img.jsx-1396407732{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h1.jsx-1396407732{font-weight:600;padding:15px;}h2.jsx-1396407732{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}.podcast.jsx-1396407732{display:block;-webkit-text-decoration:none;text-decoration:none;color:#333;padding:15px;border-bottom:1px solid rgba(0,0,0,0.2);cursor:pointer;}.podcast.jsx-1396407732:hover{color:#000;}.podcast.jsx-1396407732 h3.jsx-1396407732{margin:0;}.podcast.jsx-1396407732 .meta.jsx-1396407732{color:#666;margin-top:0.5em;font-size:0.8em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWUvcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SmtCLEFBR3NCLEFBT0EsQUFRRSxBQU1DLEFBTUksQUFLRixBQUlKLEFBUUUsQUFRSCxBQUdGLEFBR0UsU0FGYixFQXZEcUIsQUFPQSxBQTZDckIsQUFNbUIsQ0F0QkQsQ0FyQkYsQ0FNTSxBQXVCQyxFQVpSLEVBTDJCLFNBWDNCLENBcUJHLEFBc0JBLENBMUJsQixDQWhDZSxBQU9lLElBY2pCLE1BTGlELEdBZjFDLENBb0NULEFBc0JYLENBckN1QixRQWdCSCxLQTlCSSxBQW1CWCxHQXpCYixHQTBDYSxLQWhCYixFQVdBLElBTWUsS0FwQ1MsUUFxQ2tCLE9BdkIxQyxHQU5BLElBUEEsMEJBcUNpQixlQUNqQiIsImZpbGUiOiIvVXNlcnMvc3VlL3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG4vLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIENvbXBvbmVudCB7XG4vLyAgIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBxdWVyeSB9KSB7XG4vLyAgIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZDtcblxuLy8gICBsZXQgW3JlcUNoYW5uZWwscmVxQXVkaW8scmVxU2VyaWVzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbi8vICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcbi8vICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKSxcbi8vICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKVxuLy8gICBdKVxuLy8gICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuLy8gICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsO1xuXG5cbi8vICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpby5qc29uKCk7XG4vLyAgIGxldCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzXG4gIFxuXG4vLyAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKTtcbi8vICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xuXG4vLyAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9XG4vLyAgIH1cblxuLy8gICByZW5kZXIoKSB7XG4vLyAgICAgY29uc3QgeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMgfSA9IHRoaXMucHJvcHM7XG4vLyAgICAgcmV0dXJuIDxkaXY+XG4vLyAgICAgICA8aGVhZGVyPlBvZGNhc3QgPC9oZWFkZXI+XG4vLyAgICAgICA8aDE+XG4vLyAgICAgICAge2NoYW5uZWwudGl0bGV9XG4vLyAgICAgICA8L2gxPlxuLy8gICAgICAge1xuLy8gICAgICAgICBhdWRpb0NsaXBzLm1hcCgoY2xpcCA9PiAoXG4vLyAgICAgICAgICAgPGRpdj5cbi8vICAgICAgICAgICAgIHtjbGlwLnRpdGxlfVxuLy8gICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICApKSkgXG4vLyAgICAgICB9XG4vLyAgICAgICA8aDI+bGFzdCBwb2RjYXN0PC9oMj5cbi8vICAgICAgIHtcbi8vICAgICAgICAgICBzZXJpZXMubWFwKHNlcmllID0+IChcbi8vICAgICAgICAgICAgIDxkaXY+XG4vLyAgICAgICAgICAgICAgIHtzZXJpZS50aXRsZX1cbi8vICAgICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICAgICkpIFxuLy8gICAgICAgfVxuLy8gICAgICAgPHN0eWxlIGpzeD4ge2Bcbi8vICAgICAgICAgaGVhZGVyIHtcbi8vICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4vLyAgICAgICAgICAgYmFja2dyb3VuZDogIzg3NTZjYTtcbi8vICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuLy8gICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbi8vICAgICAgICAgfVxuLy8gICAgICAgICBoMSB7XG4vLyAgICAgICAgICAgcGFkZGluZzogMTVweCxcbi8vICAgICAgICAgfVxuLy8gICAgICAgICAuY2hhbm5lbHMge1xuLy8gICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4vLyAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XG4vLyAgICAgICAgICAgcGFkZGluZzogMTVweDtcbi8vICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNjBweCwgMWZyKSk7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgYS5jaGFubmVsIHtcbi8vICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbi8vICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbi8vICAgICAgICAgICBjb2xvcjogIzMzMztcbi8vICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4vLyAgICAgICAgIH1cbi8vICAgICAgICAgLmNoYW5uZWwgaW1nIHtcbi8vICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4vLyAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA2cHggcmdiYSgwLDAsMCwwLjE1KTtcbi8vICAgICAgICAgICB3aWR0aDogMTAwJTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgICBoMiB7XG4vLyAgICAgICAgICAgcGFkZGluZzogNXB4O1xuLy8gICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4vLyAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbi8vICAgICAgICAgICBtYXJnaW46IDA7XG4vLyAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuLy8gICAgICAgICAgIGNvbG9yOiAjODc1NmNhO1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfVxuLy8gICAgICAgPC9zdHlsZT5cblxuLy8gICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+IHtgXG4vLyAgICAgICAgIGJvZHkge1xuLy8gICAgICAgICAgIG1hcmdpbjogMDtcbi8vICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaWdodGN5YW47XG4vLyAgICAgICAgICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgYH1cbi8vICAgICAgIDwvc3R5bGU+XG4vLyAgICAgPC9kaXY+XG4vLyAgIH1cbi8vIH07XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBzdGF0aWMgYXN5bmMgZ2V0SW5pdGlhbFByb3BzKHsgcXVlcnkgfSkge1xuICAgIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZFxuXG4gICAgbGV0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcbiAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApLFxuICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2F1ZGlvX2NsaXBzYClcbiAgICBdKVxuXG4gICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcbiAgICBsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbFxuXG4gICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpXG4gICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcblxuICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxuICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcblxuICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMgfSA9IHRoaXMucHJvcHNcblxuICAgIHJldHVybiA8ZGl2PlxuICAgICAgPGhlYWRlcj5Qb2RjYXN0czwvaGVhZGVyPlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhbm5lclwiIHN0eWxlPXt7IGJhY2tncm91bmRJbWFnZTogYHVybCgke2NoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9KWAgfX0gLz5cblxuICAgICAgPGgxPnsgY2hhbm5lbC50aXRsZSB9PC9oMT5cblxuICAgICAgeyBzZXJpZXMubGVuZ3RoID4gMCAmJlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hhbm5lbHNcIj5cbiAgICAgICAgICAgIHsgc2VyaWVzLm1hcCgoc2VyaWUpID0+IChcbiAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9jaGFubmVsP2lkPSR7IHNlcmllLmlkIH1gfSBwcmVmZXRjaD5cbiAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJjaGFubmVsXCI+XG4gICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IHNlcmllLnVybHMubG9nb19pbWFnZS5vcmlnaW5hbCB9IGFsdD1cIlwiLz5cbiAgICAgICAgICAgICAgICAgIDxoMj57IHNlcmllLnRpdGxlIH08L2gyPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgfVxuXG4gICAgICA8aDI+VWx0aW1vcyBQb2RjYXN0czwvaDI+XG4gICAgICB7IGF1ZGlvQ2xpcHMubWFwKChjbGlwKSA9PiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9kY2FzdFwiIGtleT17Y2xpcC5pZH0+eyBjbGlwLnRpdGxlIH08L2Rpdj5cbiAgICAgICkpfVxuXG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgaGVhZGVyIHtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjODc1NmNhO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgLmJhbm5lciB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDI1JTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jaGFubmVscyB7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBncmlkLWdhcDogMTVweDtcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcbiAgICAgICAgfVxuICAgICAgICBhLmNoYW5uZWwge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAuY2hhbm5lbCBpbWcge1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgIGgxIHtcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgIH1cbiAgICAgICAgaDIge1xuICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb2RjYXN0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjIpO1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgICAucG9kY2FzdDpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIH1cbiAgICAgICAgLnBvZGNhc3QgaDMge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgICAucG9kY2FzdCAubWV0YSB7XG4gICAgICAgICAgY29sb3I6ICM2NjY7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMC41ZW07XG4gICAgICAgICAgZm9udC1zaXplOiAwLjhlbTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICBib2R5IHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICB9XG59XG4iXX0= */\\n/*@ sourceURL=/Users/sue/podcasts/pages/channel.js */\"), __jsx(_JSXStyle, {\n      id: \"1768601800\",\n      __self: this\n    }, \"body{margin:0;font-family:system-ui;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdWUvcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyTnlCLEFBR29CLFNBQ2Esc0JBQ0wsaUJBQ25CIiwiZmlsZSI6Ii9Vc2Vycy9zdWUvcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgQ29tcG9uZW50IHtcbi8vICAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyh7IHF1ZXJ5IH0pIHtcbi8vICAgbGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkO1xuXG4vLyAgIGxldCBbcmVxQ2hhbm5lbCxyZXFBdWRpbyxyZXFTZXJpZXNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuLy8gICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxuLy8gICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApLFxuLy8gICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApXG4vLyAgIF0pXG4vLyAgIGxldCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpXG4vLyAgICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWw7XG5cblxuLy8gICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvLmpzb24oKTtcbi8vICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcbiAgXG5cbi8vICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xuLy8gICBsZXQgc2VyaWVzID0gZGF0YVNlcmllcy5ib2R5LmNoYW5uZWxzXG5cbi8vICAgcmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzIH1cbi8vICAgfVxuXG4vLyAgIHJlbmRlcigpIHtcbi8vICAgICBjb25zdCB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9ID0gdGhpcy5wcm9wcztcbi8vICAgICByZXR1cm4gPGRpdj5cbi8vICAgICAgIDxoZWFkZXI+UG9kY2FzdCA8L2hlYWRlcj5cbi8vICAgICAgIDxoMT5cbi8vICAgICAgICB7Y2hhbm5lbC50aXRsZX1cbi8vICAgICAgIDwvaDE+XG4vLyAgICAgICB7XG4vLyAgICAgICAgIGF1ZGlvQ2xpcHMubWFwKChjbGlwID0+IChcbi8vICAgICAgICAgICA8ZGl2PlxuLy8gICAgICAgICAgICAge2NsaXAudGl0bGV9XG4vLyAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICkpKSBcbi8vICAgICAgIH1cbi8vICAgICAgIDxoMj5sYXN0IHBvZGNhc3Q8L2gyPlxuLy8gICAgICAge1xuLy8gICAgICAgICAgIHNlcmllcy5tYXAoc2VyaWUgPT4gKFxuLy8gICAgICAgICAgICAgPGRpdj5cbi8vICAgICAgICAgICAgICAge3NlcmllLnRpdGxlfVxuLy8gICAgICAgICAgICAgPC9kaXY+XG4vLyAgICAgICAgICAgKSkgXG4vLyAgICAgICB9XG4vLyAgICAgICA8c3R5bGUganN4PiB7YFxuLy8gICAgICAgICBoZWFkZXIge1xuLy8gICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbi8vICAgICAgICAgICBiYWNrZ3JvdW5kOiAjODc1NmNhO1xuLy8gICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4vLyAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuLy8gICAgICAgICB9XG4vLyAgICAgICAgIGgxIHtcbi8vICAgICAgICAgICBwYWRkaW5nOiAxNXB4LFxuLy8gICAgICAgICB9XG4vLyAgICAgICAgIC5jaGFubmVscyB7XG4vLyAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcbi8vICAgICAgICAgICBncmlkLWdhcDogMTVweDtcbi8vICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuLy8gICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgICBhLmNoYW5uZWwge1xuLy8gICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuLy8gICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuLy8gICAgICAgICAgIGNvbG9yOiAjMzMzO1xuLy8gICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgICAuY2hhbm5lbCBpbWcge1xuLy8gICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbi8vICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xuLy8gICAgICAgICAgIHdpZHRoOiAxMDAlO1xuLy8gICAgICAgICB9XG4vLyAgICAgICAgIGgyIHtcbi8vICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4vLyAgICAgICAgICAgZm9udC1zaXplOiAwLjllbTtcbi8vICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuLy8gICAgICAgICAgIG1hcmdpbjogMDtcbi8vICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4vLyAgICAgICAgICAgY29sb3I6ICM4NzU2Y2E7XG4vLyAgICAgICAgIH1cbi8vICAgICAgIGB9XG4vLyAgICAgICA8L3N0eWxlPlxuXG4vLyAgICAgICA8c3R5bGUganN4IGdsb2JhbD4ge2Bcbi8vICAgICAgICAgYm9keSB7XG4vLyAgICAgICAgICAgbWFyZ2luOiAwO1xuLy8gICAgICAgICAgIGJhY2tncm91bmQ6IGxpZ2h0Y3lhbjtcbi8vICAgICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfVxuLy8gICAgICAgPC9zdHlsZT5cbi8vICAgICA8L2Rpdj5cbi8vICAgfVxuLy8gfTtcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBxdWVyeSB9KSB7XG4gICAgbGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkXG5cbiAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxuICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2NoaWxkX2NoYW5uZWxzYCksXG4gICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKVxuICAgIF0pXG5cbiAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxuICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsXG5cbiAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKClcbiAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwc1xuXG4gICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXG4gICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xuXG4gICAgcmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzIH1cbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcyB9ID0gdGhpcy5wcm9wc1xuXG4gICAgcmV0dXJuIDxkaXY+XG4gICAgICA8aGVhZGVyPlBvZGNhc3RzPC9oZWFkZXI+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFubmVyXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbH0pYCB9fSAvPlxuXG4gICAgICA8aDE+eyBjaGFubmVsLnRpdGxlIH08L2gxPlxuXG4gICAgICB7IHNlcmllcy5sZW5ndGggPiAwICYmXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGgyPlNlcmllczwvaDI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGFubmVsc1wiPlxuICAgICAgICAgICAgeyBzZXJpZXMubWFwKChzZXJpZSkgPT4gKFxuICAgICAgICAgICAgICA8TGluayBocmVmPXtgL2NoYW5uZWw/aWQ9JHsgc2VyaWUuaWQgfWB9IHByZWZldGNoPlxuICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImNoYW5uZWxcIj5cbiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXsgc2VyaWUudXJscy5sb2dvX2ltYWdlLm9yaWdpbmFsIH0gYWx0PVwiXCIvPlxuICAgICAgICAgICAgICAgICAgPGgyPnsgc2VyaWUudGl0bGUgfTwvaDI+XG4gICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICB9XG5cbiAgICAgIDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cbiAgICAgIHsgYXVkaW9DbGlwcy5tYXAoKGNsaXApID0+IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwb2RjYXN0XCIga2V5PXtjbGlwLmlkfT57IGNsaXAudGl0bGUgfTwvZGl2PlxuICAgICAgKSl9XG5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBoZWFkZXIge1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAuYmFubmVyIHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjUlO1xuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNoYW5uZWxzIHtcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTYwcHgsIDFmcikpO1xuICAgICAgICB9XG4gICAgICAgIGEuY2hhbm5lbCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB9XG4gICAgICAgIC5jaGFubmVsIGltZyB7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwwLDAsMC4xNSk7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgaDEge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuICAgICAgICBoMiB7XG4gICAgICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBvZGNhc3Qge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMik7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgIC5wb2RjYXN0OmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgfVxuICAgICAgICAucG9kY2FzdCBoMyB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICAgIC5wb2RjYXN0IC5tZXRhIHtcbiAgICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgICAgICAgICBmb250LXNpemU6IDAuOGVtO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG5cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIGJvZHkge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gIH1cbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/sue/podcasts/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/sue/podcasts/pages/channel.js"],"names":["Link","React","Component","getInitialProps","query","idChannel","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","dataChannel","json","channel","body","dataAudios","audioClips","audio_clips","dataSeries","series","channels","render","props","backgroundImage","urls","banner_image","original","title","length","map","serie","logo_image","clip"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n\n// export default class extends Component {\n//   static async getInitialProps({ query }) {\n//   let idChannel = query.id;\n\n//   let [reqChannel,reqAudio,reqSeries] = await Promise.all([\n//     fetch(`https://api.audioboom.com/channels/${idChannel}`),\n//     fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n//     fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n//   ])\n//   let dataChannel = await reqChannel.json()\n//     let channel = dataChannel.body.channel;\n\n\n//   let dataAudios = await reqAudio.json();\n//   let audioClips = dataAudios.body.audio_clips\n  \n\n//   let dataSeries = await reqSeries.json();\n//   let series = dataSeries.body.channels\n\n//   return { channel, audioClips, series }\n//   }\n\n//   render() {\n//     const { channel, audioClips, series } = this.props;\n//     return <div>\n//       <header>Podcast </header>\n//       <h1>\n//        {channel.title}\n//       </h1>\n//       {\n//         audioClips.map((clip => (\n//           <div>\n//             {clip.title}\n//           </div>\n//         ))) \n//       }\n//       <h2>last podcast</h2>\n//       {\n//           series.map(serie => (\n//             <div>\n//               {serie.title}\n//             </div>\n//           )) \n//       }\n//       <style jsx> {`\n//         header {\n//           color: white;\n//           background: #8756ca;\n//           padding: 15px;\n//           text-align: center;\n//         }\n//         h1 {\n//           padding: 15px,\n//         }\n//         .channels {\n//           display: grid;\n//           grid-gap: 15px;\n//           padding: 15px;\n//           grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n//         }\n//         a.channel {\n//           display: block;\n//           margin-bottom: 0.5em;\n//           color: #333;\n//           text-decoration: none;\n//         }\n//         .channel img {\n//           border-radius: 3px;\n//           box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n//           width: 100%;\n//         }\n//         h2 {\n//           padding: 5px;\n//           font-size: 0.9em;\n//           font-weight: 600;\n//           margin: 0;\n//           text-align: center;\n//           color: #8756ca;\n//         }\n//       `}\n//       </style>\n\n//       <style jsx global> {`\n//         body {\n//           margin: 0;\n//           background: lightcyan;\n//           font-family: system-ui;\n//         }\n//       `}\n//       </style>\n//     </div>\n//   }\n// };\nimport Link from 'next/link'\n\nexport default class extends React.Component {\n\n  static async getInitialProps({ query }) {\n    let idChannel = query.id\n\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n    ])\n\n    let dataChannel = await reqChannel.json()\n    let channel = dataChannel.body.channel\n\n    let dataAudios = await reqAudios.json()\n    let audioClips = dataAudios.body.audio_clips\n\n    let dataSeries = await reqSeries.json()\n    let series = dataSeries.body.channels\n\n    return { channel, audioClips, series }\n  }\n\n  render() {\n    const { channel, audioClips, series } = this.props\n\n    return <div>\n      <header>Podcasts</header>\n\n      <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n\n      <h1>{ channel.title }</h1>\n\n      { series.length > 0 &&\n        <div>\n          <h2>Series</h2>\n          <div className=\"channels\">\n            { series.map((serie) => (\n              <Link href={`/channel?id=${ serie.id }`} prefetch>\n                <a className=\"channel\">\n                  <img src={ serie.urls.logo_image.original } alt=\"\"/>\n                  <h2>{ serie.title }</h2>\n                </a>\n              </Link>\n            ))}\n          </div>\n        </div>\n      }\n\n      <h2>Ultimos Podcasts</h2>\n      { audioClips.map((clip) => (\n        <div className=\"podcast\" key={clip.id}>{ clip.title }</div>\n      ))}\n\n\n      <style jsx>{`\n        header {\n          color: #fff;\n          background: #8756ca;\n          padding: 15px;\n          text-align: center;\n        }\n\n        .banner {\n          width: 100%;\n          padding-bottom: 25%;\n          background-position: 50% 50%;\n          background-size: cover;\n          background-color: #aaa;\n        }\n\n        .channels {\n          display: grid;\n          grid-gap: 15px;\n          padding: 15px;\n          grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n        }\n        a.channel {\n          display: block;\n          margin-bottom: 0.5em;\n          color: #333;\n          text-decoration: none;\n        }\n        .channel img {\n          border-radius: 3px;\n          box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n          width: 100%;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        h2 {\n          padding: 5px;\n          font-size: 0.9em;\n          font-weight: 600;\n          margin: 0;\n          text-align: center;\n        }\n\n        .podcast {\n          display: block;\n          text-decoration: none;\n          color: #333;\n          padding: 15px;\n          border-bottom: 1px solid rgba(0,0,0,0.2);\n          cursor: pointer;\n        }\n        .podcast:hover {\n          color: #000;\n        }\n        .podcast h3 {\n          margin: 0;\n        }\n        .podcast .meta {\n          color: #666;\n          margin-top: 0.5em;\n          font-size: 0.8em;\n        }\n      `}</style>\n\n      <style jsx global>{`\n        body {\n          margin: 0;\n          font-family: system-ui;\n          background: white;\n        }\n      `}</style>\n    </div>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}